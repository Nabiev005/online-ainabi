import React, { useState } from 'react';
import "../styles/ChatBot.css"

type Message = {
  from: 'user' | 'bot';
  text: string;
};

const predefinedAnswers: { [question: string]: string } = {
  '–ö—É—Ä—Å—Ç–∞—Ä –∫–∞–Ω—á–∞ —Ç—É—Ä–∞—Ç?': '–ö—É—Ä—Å—Ç–∞—Ä—ã–±—ã–∑–¥—ã–Ω –±–∞–∞—Å—ã 1000 —Å–æ–º–¥–æ–Ω –±–∞—à—Ç–∞–ª–∞—Ç.',
  '–û–∫—É—É –∫–∞–Ω—á–∞ —É–±–∞–∫—ã—Ç–∫–∞ —Å–æ–∑—É–ª–∞—Ç?': '–ê—Ä –±–∏—Ä –∫—É—Ä—Å 4 –∂—É–º–∞–≥–∞ —Å–æ–∑—É–ª–∞—Ç.',
  '–û–Ω–ª–∞–π–Ω–±—ã –∂–µ –æ—Ñ–ª–∞–π–Ω–±—ã?': '–ë–∏–∑–¥–∏–Ω –±–∞—Ä–¥—ã–∫ –∫—É—Ä—Å—Ç–∞—Ä –æ–Ω–ª–∞–π–Ω —Ç“Ø—Ä“Ø–Ω–¥”© ”©—Ç”©—Ç.',
  '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –±–µ—Ä–∏–ª–µ–±–∏?': '–û–æ–±–∞, –∫—É—Ä—Å—Ç—É –∞—è–∫—Ç–∞–≥–∞–Ω–¥–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –±–µ—Ä–∏–ª–µ—Ç.',
  '–ö–∞–Ω—Ç–∏–ø –∫–∞—Ç—Ç–∞–ª–∞–º?': '–ë–∞—à–∫—ã –±–µ—Ç—Ç–µ–≥–∏ –∫–∞—Ç—Ç–∞–ª—É—É —Ñ–æ—Ä–º–∞—Å—ã –∞—Ä–∫—ã–ª—É—É –∫–∞—Ç—Ç–∞–ª–∞ –∞–ª–∞—Å—ã–∑.',
};

const ChatBot: React.FC = () => {
  const [messages, setMessages] = useState<Message[]>([]);
  const [input, setInput] = useState('');
  const [isOpen, setIsOpen] = useState(false);

  const handleToggle = () => setIsOpen(!isOpen);

  const handleSend = async () => {
    if (!input.trim()) return;
    const userMsg: Message = { from: 'user', text: input };
    setMessages((prev) => [...prev, userMsg]);
    setInput('');

    const reply = predefinedAnswers[input.trim()] || '–ö–µ—á–∏—Ä–µ—Å–∏–∑, –±—É–ª —Å—É—Ä–æ–æ–≥–æ –∂–æ–æ–ø –±–µ—Ä–µ –∞–ª–±–∞–π –∂–∞—Ç–∞–º.';
    const botMsg: Message = { from: 'bot', text: reply };
    setMessages((prev) => [...prev, botMsg]);
  };

  const handleQuickQuestion = (question: string) => {
    const userMsg: Message = { from: 'user', text: question };
    const reply = predefinedAnswers[question] || '–ë—É–ª —Å—É—Ä–æ–æ–≥–æ –∞–∑—ã—Ä—ã–Ω—á–∞ –∂–æ–æ–ø –∂–æ–∫.';
    const botMsg: Message = { from: 'bot', text: reply };

    setMessages((prev) => [...prev, userMsg, botMsg]);
  };

  return (
    <div className={`chatbot-container ${isOpen ? 'open' : ''}`}>
      <div className="chatbot-header" onClick={handleToggle}>
        ü§ñ –ß–∞—Ç –ë–æ—Ç
      </div>

      {isOpen && (
        <div className="chatbot-body">
          {/* –î–∞—è—Ä —Å—É—Ä–æ–æ–ª–æ—Ä */}
          <div className="quick-questions">
            {Object.keys(predefinedAnswers).map((question, idx) => (
              <button
                key={idx}
                onClick={() => handleQuickQuestion(question)}
                className="quick-question"
              >
                {question}
              </button>
            ))}
          </div>

          {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
          <div className="chatbot-messages">
            {messages.map((msg, index) => (
              <div
                key={index}
                className={`chatbot-message ${msg.from === 'user' ? 'user' : 'bot'}`}
              >
                {msg.text}
              </div>
            ))}
          </div>

          {/* –ò–Ω–ø—É—Ç */}
          <div className="chatbot-input">
            <input
              type="text"
              value={input}
              onChange={(e) => setInput(e.target.value)}
              placeholder="–°—É—Ä–æ–æ –∂–∞–∑—ã“£—ã–∑..."
              onKeyDown={(e) => e.key === 'Enter' && handleSend()}
            />
            <button onClick={handleSend}>–ñ–∏–±–µ—Ä</button>
          </div>
        </div>
      )}
    </div>
  );
};

export default ChatBot;
